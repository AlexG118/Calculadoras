<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnCambio.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAD6CAYAAABODJmtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAA0TSURBVHhe7d3dctu4EkVhP/hUxYnz98i5mCoPnSPnOI4diSBI7ga+C9VcjCCBaqzVGyRcuXt8
        fLzz+vM3uLu7u396+W2sj5HXAPjfEOAF/sflv08vEtAkhuVk2AtrtfYr+EkA/EMzMvTFrZXAO/CTAAkM
        y8mwF9YZfhIggSFZGfKidoKfBEhgOF6Gu6Cd4ScBEhiKmaEu5iD4SYAEhuFmmAs5GH4SIIEh2BniIhrg
        /3h5xv8M8pb/flz7/d7vcFHKGphOAAv4PeF/FgcJSAQlWSo56VZ77gQ/CYC/LEdlJ75WAjvDTwIkUJKl
        kpMOhZ8ESKAcT+UmHA4/CZBAKaZKTbYI/CRAAmW4KjPRYvCTAAmUYKvEJIvCTwIkEM9X/AQb4P/U8ZDP
        lgNCL8d+Wnsd3u+w0BFrYCgBLOAnwv8sAhKQCOJ4i5tQq/XC4ScB8EeyFjmptRIoAj8JkEAcb3ETGhx+
        EiCBKOaiJjMJ/CRAAjHcxUxkMvhJgAQi2IuYxKTwkwAJnM7f6ROYHH4SIIFTGTz1yxvgfwg85NPrsNDD
        2t/D+x0W2roGyghgAX9k+J8lQgISwaFMHvplrbaaBH4SAP/hPB7+hWslMBn8JEAChzJ56JeB/+e/Nnzr
        y3aADHbnc/cvWAv98/sn7fyv5UACJLAro7t+OPhv7vZ/SwUkQAK7cbrbB4O/C/zuCYB/V0Z3/fC1EhD7
        /yoNSYAMuvPa/QPXQv9iz/95xQ2yW2+kjfa+z62/r3EODb21BiIEsIAP/tufDpCAJNCN224f1NphwN90
        r4AESKALu10+BPxNEG/dnpAACWzmd/MHgP8U+J/lQQIksInhTYPBfyr8JAD+zfxu/oC1ErDn30UakgAZ
        NLHcNGgt9B717QL963sIJEACq3lePQD8h8DceoOQBEhgFdOr3rwB/i8O+Rwmji+tdTJuvsNCuwtgAR/8
        tx/yae38r8eRgCRwE9s3vam1M4D/sK7/ljhIgASu8n31DeA/FeKtiYAESOCvjO8iAJ0/ShokQALvct5d
        AOCPgv85QZAACbzJelcBgD8SfhIA//4JAPzR8JMACeyXAMBfAn4SIIE/JLB5C7DA/9Uhn1ICeBLB19an
        O8aNdVhokwDAXw78l48VSUAiWI6oNf4I4C8N/7MISKBx/bdykzauSQDgHwJ+Epgc/icZrRYA+IeCnwQm
        l8AqAYB/SPhJYGIJ3CwA8A8NPwlMKoGbBAD+KeAngQklcFUA4J8KfhKYTAJ//1PBu7tvDvlMKYAnEXxL
        e2RlPv0PIb3/RwLg3/q3+COMJ4HBE8HbfyAA/hHg7XUNJDCwBP784wDw9wJnpM8hgUEl8JsAnvZ99vzT
        7vmvCYsEBpTALwGAH/g3yJ8EBpPATwGAH/w3wP+cEEhgIAk8wf9hef0If/27YoFei7Lp///pWtPr8cEj
        uf6P5M74Ta8eBDpjUq+/cwHi+0QCuE/4zc1hDMCv1ZEAjv9Xe64lEAIYKGJfA/Ds/08ABFBiDZwNyqjf
        X6L4tgBzxNFRIUu+LgKQAEqsgWSIKs+tRPElAAmgMmTJcycACaDEGkiGqPLcShRfApAAKkOWPHcCkABK
        rIFkiCrPrUTxJQAJoDJkyXMnAAmgxBpIhqjy3EoUXwKQACpDljx3ApAASqyBZIgqz61E8SUACaAyZMlz
        JwAJoMQaSIao8txKFF8CkAAqQ5Y8dwKQAEqsgWSIKs+tRPElAAmgMmTJcycACaDEGkiGqPLcShRfApAA
        KkOWPHcCkABKrIFkiCrPrUTxJQAJoDJkyXMnAAmgxBpIhqjy3EoUXwKQACpDljx3ApAASqyBZIgqz61E
        8SUACaAyZMlzJwAJoMQaSIao8txKFF8CkAAqQ5Y8dwKQAEqsgWSIKs+tRPElAAmgMmTJcycACaDEGkiG
        qPLcShRfApAAKkOWPHcCkABKrIFkiCrPrUTxJQAJoDJkyXMnAAngsDWwiPyf5fVjktdDMvjPczus+Ft+
        DAlgjASw1PF+eT1O8vq+Zc0fNZYA8hbk/VHFP/p7CCBP5ARAAIetAQIggKbFZguQt3Ba0gMB5NWxCciW
        4m8ZQwB5C6elngSQV0cCsAU4bA0QAAE0LTYJIG/hSABXn2Z4CtCySN4aQwAEUPDRIQEQwNUu8dYzcY8B
        87ZlLWcXCIAACODlGnAPIC/JNe3Je4F96+fYAuQtnFtrRwDZtSOAvLhpC5BXE1uAFuP3GiMBZHeRW+ts
        C5BXRwkgr9tIAHk1kQButfwe75MA8jpHS50lgLw6SgB53UYCyKuJBNBi/F5jJIC8ztFSWwkgr44SQF63
        kQDyaiIBtBi/1xgJIK9ztNRWAsirowSQ120kgLyaSAAtxu81RgLI6xwttZUA8uooAeR1GwkgryYSQIvx
        e42RAPI6R0ttJYC8OkoAed1GAsiriQTQYvxeYySAvM7RUlsJIK+OEkBet5EA8moiAbQYv9cYCSCvc7TU
        VgLIq6MEkNdtJIC8mkgALcbvNUYCyOscLbWVAPLqKAHkdRsJIK8mEkCL8XuNkQDyOkdLbSWAvDpKAHnd
        RgLIq4kE0GL8XmMkgLzO0VJbCSCvjhJAXreRAPJqIgG0GL/XGAkgr3O01FYCyKujBJDXbSSAvJpIAC3G
        7zVGAsjrHC21lQDy6igB5HUbCSCvJhJAi/F7jVk6x8Py+jHJ659ev1va50gAEkCJxJEGzijzIQACIIDH
        vEVwlGAIIK/2gJwYyKPAf/4eAiAAwplYOARAAARAAC131CuO+X50wmr5PkBODGTLgtkyRgKQAAhnYuEQ
        AAEQAAFUjPMtc7YF2BIXjc3rFltrIgHk1VRHnrgjbwV67XgCIADCmVg4BEAABEAALfvpimPcA1gbEb0/
        r0P0rIkEkFdfHXnijtwT7ls+iwAIgHAmFg4BEAABEEDF/XzLnN0DuCUWek9eV9irJhJAXq115Ik78l6g
        v/e5BEAAhDOxcAiAAAiAAFr20xXHuAdwdMT0fXkd5mVNJIC8+ujIE3fko4VJAARAOBMLhwAIgAAIoOJ+
        vmXO7gEcHTF9X16HcQ8gvCagyS7QSPWxBchbayL5xJH8aLkQAAEQzsTCIQACIAACaLmhVnGMm4BHR0zf
        l9dh3AQMrwlosgs0Un1sAfLWmkg+cSQ/Wi4EQACEM7FwCIAACIAAKt7Qa5mzm4BHR8yZv2/prh+W14/w
        17/L/Fpgqjjm6VrT6/FBRx6oIy8L7ttEgFWUQtKcvz01TAIYSAA/C0oCSZClzuUn/AQwGPy/ikoCqeAl
        zOsX/AQwqAAkgWnuM6wVym/wE8DAAiABEnh1P+gP+AlgcAGQAAlcJPAm/AQwgQBIYHoJvAs/AUwigIsE
        vnpEOJ0Mvl47G+MxIAmsvZHk/TUOM12FXwKYCP4XjwglgRoAbxHtTfATwIQCsB0YfhtwM/wEMKkASGBY
        CayCnwAmFgAJDCeB1fATwOQCIIFhJNAEPwEQwP/+IOTuzo3BujcGm+EnAAL49RiYBEqmgU3wEwAB/HYO
        ZJHAF4eFyojgy7VDPrf8fweBSIAE6sX/LvBLAOB/swFIAtEpoBv8BEAA7yZAEoiUQFf4CYAA/roFJIEo
        CXSHnwAI4Oo9IBKIkMAu8BMAAVwVwOWcgKcD590o3A1+AiCAmwRAAqelgF3hJwACuFkAJHC4BHaHnwAI
        YJUALhL47LDQ7jL4fMshnh7vWb0Aenypz8j7RyLX1GQRAAnsd0/gMPglAAmguQGQwC4p4FD4CYAAmgVg
        O9BdAIfDTwAEsEkAJNBNAqfATwAEsFkAJLBZAqfBTwAE0EUAJNAsgVPhJwAC6CYAElgtgdPhJwAC6CoA
        ErhZAhHwEwABdBfARQIPDgu9K4OHNWcu9n7vLgtg70n7/PyDRIsASODPw0JR8EsAEsCuDYAEfksBcfAT
        AAHsKgDbgV8CiISfAAhgdwGQwF0s/ARAAIcIYGIJRMNPAARwmAAmlEA8/ARAAIcKYCIJlICfAAjgcAFM
        IIEy8BMAAZwigIsEPg14WOhTtTMqpy2Aaj+U+fY/fLQIYCQJlINfApAATm8Ag0igJPwEQACnC2CA7UBZ
        +AmAACIEUFgCpeEnAAKIEUBBCZSHnwAIIEoAhSQwBPwEQABxAigggWHgJwACiBRAsASGgp8ACCBWABcJ
        fAw6LPRxxLMg0QtgxB/cNa07ULQIIEECQ8IvAUgAJRrAyRIYFn4CIIASAjhxOzA0/ARAAGUEcIIEhoef
        AAiglAAOlMAU8BMAAZQTwAESmAZ+AiCAkgLYUQJTwU8ABFBWADtIYDr4CYAASgvgIoH7DoeF7mc9n1F+
        AcxaONf9/wNFiwC2SGBa+CUACWCYBtAoganhJwACGEYADduB6eEnAAIYSgArJAD+y9ofbgHYG6/7Y5sR
        f68r2wHwv2h8BCAFDLkG3pEA+F+t9yGLP2JXc03rk80rCYD/jWZHABLA0GvgIgHwv7PO/wPX0msq6gsW
        GgAAAABJRU5ErkJggg==
</value>
  </data>
</root>